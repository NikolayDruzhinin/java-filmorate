CREATE TABLE IF NOT EXISTS mpa (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
mpa_id INTEGER REFERENCES mpa(id) ON DELETE CASCADE NOT NULL,
name VARCHAR(50) NOT NULL,
description VARCHAR(255) NOT NULL,
release_date DATE NOT NULL,
duration INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS genres (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genres (
film_id BIGINT REFERENCES films(id) ON DELETE CASCADE NOT NULL,
genre_id INTEGER REFERENCES genres(id) ON DELETE CASCADE NOT NULL,
PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email VARCHAR(255) NOT NULL UNIQUE,
login VARCHAR(50) NOT NULL UNIQUE,
name VARCHAR(50) NOT NULL,
birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS likes (
film_id BIGINT REFERENCES films(id) ON DELETE CASCADE NOT NULL,
user_id BIGINT REFERENCES users(id) ON DELETE CASCADE NOT NULL,
PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friends (
user_id BIGINT REFERENCES users(id) ON DELETE CASCADE NOT NULL,
friend_id BIGINT REFERENCES users(id) ON DELETE CASCADE NOT NULL,
PRIMARY KEY (user_id, friend_id)
);

CREATE INDEX IF NOT EXISTS idx_friends_user ON friends(user_id);
CREATE INDEX IF NOT EXISTS idx_friends_friend ON friends(friend_id);
CREATE INDEX IF NOT EXISTS idx_genres ON film_genres(genre_id);
CREATE INDEX IF NOT EXISTS idx_films ON film_genres(film_id);
