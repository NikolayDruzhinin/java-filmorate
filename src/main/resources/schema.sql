DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS film_genres;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS mpa;
DROP TABLE IF EXISTS genres;
DROP INDEX IF EXISTS idx_friends_user;
DROP INDEX IF EXISTS idx_friends_friend;
DROP INDEX IF EXISTS idx_genres;
DROP INDEX IF EXISTS idx_films;

CREATE TABLE IF NOT EXISTS mpa (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
mpa_id INTEGER REFERENCES mpa(id) ON DELETE CASCADE,
name VARCHAR(50) NOT NULL,
description TEXT NOT NULL,
release_date DATE NOT NULL,
duration INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS genres (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genres (
film_id BIGINT REFERENCES films(id) ON DELETE CASCADE,
genre_id INTEGER REFERENCES genres(id) ON DELETE CASCADE,
PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email VARCHAR(255) NOT NULL UNIQUE,
login VARCHAR(50) NOT NULL UNIQUE,
name VARCHAR(50) NOT NULL,
birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS likes (
film_id BIGINT REFERENCES films(id) ON DELETE CASCADE,
user_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friends (
user_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
friend_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
PRIMARY KEY (user_id, friend_id)
);

CREATE INDEX IF NOT EXISTS idx_friends_user ON friends(user_id);
CREATE INDEX IF NOT EXISTS idx_friends_friend ON friends(friend_id);
CREATE INDEX IF NOT EXISTS idx_genres ON film_genres(genre_id);
CREATE INDEX IF NOT EXISTS idx_films ON film_genres(film_id);
